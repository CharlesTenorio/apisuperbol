{
	"name": "Python 3",
	"context": "..",
	"dockerFile": "../Dockerfile",
	"dockerComposeFile": ["../docker-compose.yml"], // You need to point it your `docker-compose.yml` file with proper path.
	// Uncomment the next line if you want to publish any ports.
  
	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "python --version",
	"service": "django", // You must define which service you are going to use from docker compose.
	"workspaceFolder": "/app", // path to your source inside docker file
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash",
		"python.pythonPath": "/usr/local/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.linting.pylintPath": "/usr/local/share/pip-global/bin/pylint"
	},
	// Use 'appPort' to create a container with published ports. If the port isn't working, be sure
	// your server accepts connections from all interfaces (0.0.0.0 or '*'), not just localhost.
	"appPort": [9000],

	// Install flask and any other dependencies
	"postCreateCommand": "pip install -r requirements.txt",

	// Comment out next line to run as root
	// "remoteUser": "root",

	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": [
		"ms-python.python"
	]

  }